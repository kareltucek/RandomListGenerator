<resources>
    <string name="app_name">Random List Generator</string>
    <string name="help_intro"><![CDATA[
    <h1>Introduction</h1>
        UI allows you to create multiple generators with independent parameters. These generators are automatically saved and reloaded
        on next startup, included last generated numbers.

  <ul>
  <li> <i>Label</i> is an optional string which will identify newly created generators.</li>
  <li> <i>Range</i> is a possibly complex expression defining the range and distribution of a single generation instance. See following section for more information.</li>
  <li> <i>Quantity</i> specifies number of instances of the range expression to be generated. </li>
  <li> <i>Unique</i> checkbox skips values which were already encountered. Values are generated in order, so this may alter distribution of your values - i.e.,
   values with higher probability is more likely to occur at the beginning of a generated list.</li>
  <li> <i>Sorted</i> checkbox sorts the results. If all results are numeric, they are sorted numerically. Otherwise, lexicographically. </li>
</ul>

    <h2>Range expressions (simple examples):</h2>
    <b>Range</b> expression may contain numeric ranges (such as \"<b>1-10</b>\"), numeric or string lists (such as \"<b>1,2,3</b>\" or
    \"<b>red,blue</b>\") or
    even their combination. Range expression can also parse more complex expressions, which are however not intended for regular users.

<h1>Advanced guide</h1>
Continuing to the following sections is on your own risk!

        <h2>Advanced expressions (guide):</h2>


        Range is specified as an expression written in a custom formal language. More complicated expressions can be composed of following constructs:

<ul>
  <li> <i>elements</i> E.g., \"<b>1</b>\" or \"<b>dog</b>\". Numbers (signed, unsigned, decimal) or simple strings.</li>
  <li> <i>lists</i> E.g., \"<b>1,2,3,dog,5-10</b>\". Coma or space delimited lists of expressions.</li>
  <li> <i>ranges</i> E.g., \"<b>1-5</b>\". Ranges are generally of form \"numeric expression - numeric expression\". Ranges are treated as if expanded into the parent list.</li>
  <li> <i>parenthesis groups</i> E.g., \"<b>(1,2,3)</b>\". parenthesis group picks one element with uniform probability and hands it over to the parent. </li>
  <li> <i>concatenation</i> E.g., \"<b>((a,b,c)|(1,2,3))</b>\" same as \"<b>(a,b,c|1,2,3)</b>\". Concatenates results of right and left side as a string. Result may be \"a|2\". This has <i>lower</i> priority than coma! </li>
</ul>

        <h2>Advanced use (distribution rules):</h2>

        As a rule of thumb, parentheses define order of evaluation, and therefore distribution of the resulting values.
        It is <b>important</b> to understand that expressions \"<b>1, (2-4)</b>\" and \"<b>1, 2-4</b>\" are not equivalent.
        The first one has distribution 1/2,1/6,1/6,1/6, while the second one 1/4,1/4,1/4,1/4. This is because ranges are
        evaluated via roulette as if they were expanded prior to evaluation. When enclosed in parentheses, weight of its
        results is automatically 1 (i.e., as of any simple element).


  <h2>Advanced use (examples):</h2>
  <li> \"<b>((yellow,red)|bird),((small,big)|dog)</b>\" May return for instance \"yellow|bird\" or \"small|dog\". May not return \"red|dog\"</li>
  <li> \"<b>(yellow,red)|bird,(small,big)|dog</b>\" Incorrectly parenthesed. One of possible results is \"yellow|bird|dog\"</li>
  <li> \"<b>(1,3)-(6-9)</b>\" Possible, but not recommended.</li>
  <li> \"<b>1,(2,3)</b>\" Returns 1 with 50% chance.</li>
  <li> \"<b>1,2-3</b>\" Returns 1 with 33% chance.</li>
  <li> \"<b>1.0-2.0</b>\" Returns decimal number.</li>
  <li> \"<b>1,2.0-3.0</b>\" Returns 1 with 50% or decimal number between 2 and 3.</li>
  <li> \"<b>(1-3),(4-20),(21-25)</b>" First picks one group (with uniform probability) and then picks number from that group (with probability uniform within that group).</li>
]]>

    </string>
</resources>
